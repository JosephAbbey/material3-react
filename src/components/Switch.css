@import url(../tokens/components/switch.css);

.Switch {
  --switch-checked-track-color: var(--md-comp-switch-checked-track-color);
  --switch-unchecked-track-color: var(--md-comp-switch-unchecked-track-color);
  --switch-unchecked-track-outline-color: var(
    --md-comp-switch-unchecked-track-outline-color
  );
  --switch-checked-thumb-color: var(--md-comp-switch-checked-thumb-color);
  --switch-unchecked-thumb-color: var(--md-comp-switch-unchecked-thumb-color);
  --switch-checked-icon-color: var(--md-comp-switch-checked-icon-color);
  --switch-unchecked-icon-color: var(--md-comp-switch-unchecked-icon-color);

  --switch-disabled-checked-track-color: color-mix(
    in srgb,
    var(--md-comp-switch-disabled-checked-track-color)
      var(--md-comp-switch-disabled-checked-track-opacity),
    transparent
  );
  --switch-disabled-unchecked-track-color: color-mix(
    in srgb,
    var(--md-comp-switch-disabled-unchecked-track-color)
      var(--md-comp-switch-disabled-unchecked-track-opacity),
    transparent
  );
  --switch-disabled-unchecked-track-outline-color: color-mix(
    in srgb,
    var(--md-comp-switch-disabled-unchecked-track-outline-color)
      var(--md-comp-switch-disabled-unchecked-track-opacity),
    transparent
  );
  --switch-disabled-checked-thumb-color: color-mix(
    in srgb,
    var(--md-comp-switch-disabled-checked-thumb-color)
      var(--md-comp-switch-disabled-checked-thumb-opacity),
    transparent
  );
  --switch-disabled-unchecked-thumb-color: color-mix(
    in srgb,
    var(--md-comp-switch-disabled-unchecked-thumb-color)
      var(--md-comp-switch-disabled-unchecked-thumb-opacity),
    transparent
  );
  --switch-disabled-checked-icon-color: color-mix(
    in srgb,
    var(--md-comp-switch-disabled-checked-icon-color)
      var(--md-comp-switch-disabled-checked-icon-opacity),
    transparent
  );
  --switch-disabled-unchecked-icon-color: color-mix(
    in srgb,
    var(--md-comp-switch-disabled-unchecked-icon-color)
      var(--md-comp-switch-disabled-unchecked-icon-opacity),
    transparent
  );

  --switch-hovered-thumb-container-state-layer-opacity: var(
    --md-comp-switch-hovered-thumb-container-state-layer-opacity
  );
  --switch-unchecked-hovered-thumb-container-state-layer-color: var(
    --md-comp-switch-unchecked-hovered-thumb-container-state-layer-color
  );
  --switch-checked-hovered-thumb-container-state-layer-color: var(
    --md-comp-switch-checked-hovered-thumb-container-state-layer-color
  );
  --switch-checked-hovered-thumb-color: var(
    --md-comp-switch-checked-hovered-thumb-color
  );
  --switch-unchecked-hovered-thumb-color: var(
    --md-comp-switch-unchecked-hovered-thumb-color
  );

  --switch-pressed-thumb-container-state-layer-opacity: var(
    --md-comp-switch-pressed-thumb-container-state-layer-opacity
  );
  --switch-unchecked-pressed-thumb-container-state-layer-color: var(
    --md-comp-switch-unchecked-pressed-thumb-container-state-layer-color
  );
  --switch-checked-pressed-thumb-container-state-layer-color: var(
    --md-comp-switch-checked-pressed-thumb-container-state-layer-color
  );
  --switch-checked-pressed-thumb-color: var(
    --md-comp-switch-checked-pressed-thumb-color
  );
  --switch-unchecked-pressed-thumb-color: var(
    --md-comp-switch-unchecked-pressed-thumb-color
  );
}

.Switch {
  width: 52px;
  height: 32px;
  border-radius: 16px;
  position: relative;
  box-sizing: border-box;
}

.Switch:not(:has(> :disabled)) {
  cursor: pointer;
}

.Switch.checked {
  background-color: var(--switch-checked-track-color);
  border: 2px solid transparent;
}
.Switch:not(.checked) {
  background-color: var(--switch-unchecked-track-color);
  border: 2px solid var(--switch-unchecked-track-outline-color);
}
.Switch.checked:has(> :disabled) {
  background-color: var(--switch-disabled-checked-track-color);
  border: 2px solid transparent;
}
.Switch:not(.checked):has(> :disabled) {
  background-color: var(--switch-disabled-unchecked-track-color);
  border: 2px solid var(--switch-disabled-unchecked-track-outline-color);
}

.Switch > .Thumb {
  position: absolute;
}

.Switch.checked > .Thumb {
  animation: 500ms switchOn;

  right: 0;
  width: 24px;
  height: 24px;
  border-radius: 12px;
  margin: 2px;
  --switch-checked-icon-opacity: 1;
  --switch-unchecked-icon-opacity: 0;

  background-color: var(--switch-checked-thumb-color);
}
.Switch.checked:has(> :disabled) > .Thumb {
  background-color: var(--switch-disabled-checked-thumb-color);
}
.Switch.checked > .Thumb > .CheckedIcon > .Icon {
  --icon-color: var(--switch-checked-icon-color);
  color: var(--switch-checked-icon-color);
}
.Switch.checked:has(> :disabled) > .Thumb > .CheckedIcon > .Icon {
  --icon-color: var(--switch-disabled-checked-icon-color);
  color: var(--switch-disabled-checked-icon-color);
}
.Switch:not(.checked) > .Thumb {
  animation: 500ms switchOff;

  right: 20px;
  width: var(--switch-off-width);
  height: var(--switch-off-height);
  border-radius: var(--switch-off-border-radius);
  margin: var(--switch-off-margin);
  --switch-checked-icon-opacity: 0;
  --switch-unchecked-icon-opacity: 1;

  background-color: var(--switch-unchecked-thumb-color);
}
.Switch:not(.checked):has(> :disabled) > .Thumb {
  background-color: var(--switch-disabled-unchecked-thumb-color);
}
.Switch:not(.checked) > .Thumb > .UncheckedIcon > .Icon {
  --icon-color: var(--switch-unchecked-icon-color);
  color: var(--switch-unchecked-icon-color);
}
.Switch:not(.checked):has(> :disabled) > .Thumb > .UncheckedIcon > .Icon {
  --icon-color: var(--switch-disabled-unchecked-icon-color);
  color: var(--switch-disabled-unchecked-icon-color);
}

.Switch > .Thumb:not(:has(> .UncheckedIcon)) {
  --switch-off-width: 16px;
  --switch-off-height: 16px;
  --switch-off-border-radius: 8px;
  --switch-off-margin: 6px;
}
.Switch > .Thumb:has(> .UncheckedIcon) {
  --switch-off-width: 24px;
  --switch-off-height: 24px;
  --switch-off-border-radius: 12px;
  --switch-off-margin: 2px;
}

.Switch > .Thumb > .CheckedIcon,
.Switch > .Thumb > .UncheckedIcon {
  position: absolute;
}
.Switch > .Thumb > .CheckedIcon {
  opacity: var(--switch-checked-icon-opacity);
}
.Switch > .Thumb > .UncheckedIcon {
  opacity: var(--switch-unchecked-icon-opacity);
}

@property --switch-checked-icon-opacity {
  syntax: '<number>';
  inherits: true;
  initial-value: 0;
}
@property --switch-unchecked-icon-opacity {
  syntax: '<number>';
  inherits: true;
  initial-value: 1;
}

@keyframes switchOn {
  0% {
    right: 20px;
    width: var(--switch-off-width);
    height: var(--switch-off-height);
    border-radius: var(--switch-off-border-radius);
    margin: var(--switch-off-margin);
    --switch-checked-icon-opacity: 0;
    --switch-unchecked-icon-opacity: 1;
  }
  20% {
    right: 20px;
    width: 28px;
    height: 28px;
    border-radius: 16px;
    margin: 0;
  }
  50% {
    --switch-checked-icon-opacity: 0;
    --switch-unchecked-icon-opacity: 0;
  }
  80% {
    right: 0;
    width: 28px;
    height: 28px;
    border-radius: 16px;
    margin: 0;
  }
  100% {
    right: 0;
    width: 24px;
    height: 24px;
    border-radius: 12px;
    margin: 2px;
    --switch-checked-icon-opacity: 1;
    --switch-unchecked-icon-opacity: 0;
  }
}
@keyframes switchOff {
  0% {
    right: 0;
    width: 24px;
    height: 24px;
    border-radius: 12px;
    margin: 2px;
    --switch-checked-icon-opacity: 1;
    --switch-unchecked-icon-opacity: 0;
  }
  20% {
    right: 0;
    width: 28px;
    height: 28px;
    border-radius: 16px;
    margin: 0;
  }
  50% {
    --switch-checked-icon-opacity: 0;
    --switch-unchecked-icon-opacity: 0;
  }
  80% {
    right: 20px;
    width: 28px;
    height: 28px;
    border-radius: 16px;
    margin: 0;
  }
  100% {
    right: 20px;
    width: var(--switch-off-width);
    height: var(--switch-off-height);
    border-radius: var(--switch-off-border-radius);
    margin: var(--switch-off-margin);
    --switch-checked-icon-opacity: 0;
    --switch-unchecked-icon-opacity: 1;
  }
}

.Switch > .Thumb {
  display: flex;
  justify-content: center;
  align-items: center;
}

.Switch > .Thumb .Icon {
  --icon-size: 16px;
  font-size: 16px;
}

.Switch > input[type='checkbox'] {
  position: absolute;
  opacity: 0;
}

.Switch:not(:has(> :disabled)):not(.checked):hover > .Thumb {
  background-color: var(--switch-unchecked-hovered-thumb-color);
}
.Switch:not(:has(> :disabled)).checked:hover > .Thumb {
  background-color: var(--switch-checked-hovered-thumb-color);
}
.Switch:not(:has(> :disabled)):not(.checked):active > .Thumb {
  background-color: var(--switch-unchecked-pressed-thumb-color);
}
.Switch:not(:has(> :disabled)).checked:active > .Thumb {
  background-color: var(--switch-checked-pressed-thumb-color);
}
.Switch > .Thumb > .Ripple {
  width: 40px;
  height: 40px;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 20px;
}
.Switch:not(.checked) > .Thumb > .Ripple {
  --ripple-hovered-color: var(
    --switch-unchecked-hovered-thumb-container-state-layer-color
  );
  --ripple-hovered-opacity: var(
    --switch-hovered-thumb-container-state-layer-opacity
  );
  --ripple-pressed-color: var(
    --switch-unchecked-pressed-thumb-container-state-layer-color
  );
  --ripple-pressed-opacity: var(
    --switch-pressed-thumb-container-state-layer-opacity
  );
}
.Switch.checked > .Thumb > .Ripple {
  --ripple-hovered-color: var(
    --switch-checked-hovered-thumb-container-state-layer-color
  );
  --ripple-hovered-opacity: var(
    --switch-hovered-thumb-container-state-layer-opacity
  );
  --ripple-pressed-color: var(
    --switch-checked-pressed-thumb-container-state-layer-color
  );
  --ripple-pressed-opacity: var(
    --switch-pressed-thumb-container-state-layer-opacity
  );
}

:is(.Switch, .Switch *) {
  user-select: none;
}
:is(.Switch, .Switch *):focus {
  -webkit-tap-highlight-color: transparent;
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}
