.Checkbox {
  width: var(--checkbox-enabled-state-layer-size);
  height: var(--checkbox-enabled-state-layer-size);
  border-radius: var(--checkbox-enabled-state-layer-shape);
  display: flex;
  text-align: center;
  justify-content: center;
  align-items: center;

  border: none;
}
.Checkbox > input[type='checkbox'] {
  opacity: 0;
  position: absolute;
}
.Checkbox:not(.disabled) {
  cursor: pointer;
}
.Checkbox > .Container {
  width: var(--checkbox-enabled-container-width);
  height: var(--checkbox-enabled-container-height);
  border-radius: var(--checkbox-enabled-container-shape);
  display: flex;
  text-align: center;
  justify-content: center;
  align-items: center;

  border: none;
}
.Checkbox > .Container > .Icon {
  --icon-size: var(--checkbox-enabled-icon-size);
}

.Checkbox.unselected > .Container {
  border: var(--checkbox-enabled-unselected-container-outline-color) solid
    var(--checkbox-enabled-unselected-container-outline-width);
  box-sizing: border-box;
}
.Checkbox:is(.selected, .indeterminate) > .Container {
  background-color: var(--checkbox-enabled-selected-container-color);
}
.Checkbox:is(.selected, .indeterminate) > .Container > .Icon {
  --icon-color: var(--checkbox-enabled-selected-icon-color);
  font-weight: bold;
}
.Checkbox.unselected.error > .Container {
  border: var(--checkbox-error-enabled-unselected-container-outline-color) solid
    var(--checkbox-enabled-unselected-container-outline-width);
  box-sizing: border-box;
}
.Checkbox:is(.selected, .indeterminate).error > .Container {
  background-color: var(--checkbox-error-enabled-selected-container-color);
}
.Checkbox:is(.selected, .indeterminate).error > .Container > .Icon {
  --icon-color: var(--checkbox-error-enabled-selected-icon-color);
  font-weight: bold;
}
.Checkbox.unselected.disabled > .Container {
  border: color-mix(
      in srgb,
      var(--checkbox-disabled-unselected-container-outline-color)
        var(--checkbox-disabled-unselected-container-opacity),
      transparent
    )
    solid var(--checkbox-enabled-unselected-container-outline-width);
  box-sizing: border-box;
}
.Checkbox:is(.selected, .indeterminate).disabled > .Container {
  background-color: color-mix(
    in srgb,
    var(--checkbox-disabled-selected-container-color)
      var(--checkbox-disabled-selected-container-opacity),
    transparent
  );
}
.Checkbox:is(.selected, .indeterminate).disabled > .Container > .Icon {
  --icon-color: var(--checkbox-disabled-selected-icon-color);
  font-weight: bold;
}

.Checkbox.unselected > .Ripple {
  --ripple-hovered-color: var(--checkbox-hovered-unselected-state-layer-color);
  --ripple-hovered-opacity: var(
    --checkbox-hovered-unselected-state-layer-opacity
  );
  --ripple-pressed-color: var(--checkbox-pressed-unselected-state-layer-color);
  --ripple-pressed-opacity: var(
    --checkbox-pressed-unselected-state-layer-opacity
  );
}
.Checkbox:is(.selected, .indeterminate) > .Ripple {
  --ripple-hovered-color: var(--checkbox-hovered-selected-state-layer-color);
  --ripple-hovered-opacity: var(
    --checkbox-hovered-selected-state-layer-opacity
  );
  --ripple-pressed-color: var(--checkbox-pressed-selected-state-layer-color);
  --ripple-pressed-opacity: var(
    --checkbox-pressed-selected-state-layer-opacity
  );
}
.Checkbox.error > .Ripple {
  --ripple-hovered-color: var(--checkbox-error-hovered-state-layer-color);
  --ripple-hovered-opacity: var(--checkbox-error-hovered-state-layer-opacity);
  --ripple-pressed-color: var(--checkbox-error-pressed-state-layer-color);
  --ripple-pressed-opacity: var(--checkbox-error-pressed-state-layer-opacity);
}

.Checkbox {
  user-select: none;
}
.Checkbox:focus {
  -webkit-tap-highlight-color: transparent;
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}
